@using Kendo.Mvc.UI

@{ ViewData["Title"] = "القسم";}

<div class="pageheader">
    <h1>القسم</h1>
    <div class="breadcrumb-wrapper hidden-xs">
        <span class="label">أنت الان علي :</span>
        <ol class="breadcrumb">
            <li>
                <a style=" color: #fff;  " href="javascript:void(0);">البيانات الرئيسية</a>
            </li>
            <li class="active">القسم</li>
        </ol>
    </div>
</div>

<section id="main-content" class="animated fadeInUp">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="table-responsive">
                        <form id="departmentfrm">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="Code">
                                        إسم القسم
                                    </label>
                                    <input type="text" class="form-control" name="ARName" id="ARName" placeholder="أدخل إسم القسم">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <br />
                                <a id="savebutton" class="btn btn-success" onclick="saveDepartment();">
                                    <i class="fa fa-save"></i> إضافة
                                </a>
                            </div>
                        </form>

                        <div id="GridView" class="k-rtl col-md-12">

                            @(Html.Kendo().Grid<Abstracts.Models.MasterLoginModel.Departments>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Select().Width(50);
        columns.Bound(p => p.DepartmentName).Width(127).Title("إسم القسم").ClientFooterTemplate("إجمالي عدد الأقسام: #=count#");
        columns.Command(command => { command.Destroy().Text("حذف"); }).Width(89);
    })
    //.ClientRowTemplate(
    //    "<tr class='k-master-row' data-uid='#: uid #' role='row'>" +
    //        "<td role='gridcell'> " +
    //        "<input class='k-checkbox' data-role='checkbox' aria-label='Select row' aria-checked='false' type='checkbox' disabled>" +
    //        "</td>" +
    //        "<td role='gridcell' class='details'>" +
    //           "<span class='description'> #: DepartmentName# </span>" +
    //        "</td>" +

    //     "</tr>"
    //).ClientAltRowTemplate(
    //    "<tr class='k-alt k-master-row' data-uid='#: uid #' role='row'>" +
    //        "<td role='gridcell'> " +
    //        "<input class=' k-checkbox' data-role='checkbox' aria-label='Select row' aria-checked='false' type='checkbox' disabled>" +
    //        "</td>" +
    //        "<td role='gridcell' class='details'>" +
    //           "<span class='description'> #: DepartmentName# </span>" +
    //        "</td>" +

    //     "</tr>"
    //)
    .ToolBar(toolbar =>
    {
        toolbar.Search().Text("بحث");

    })
    .Pageable()
    .Resizable(r => r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Sortable()
    .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Single))
    .PersistSelection()
    .Events(ev => ev.Change("onChangeSelection")
      .Page("onPaging"))
    .Scrollable()
    .HtmlAttributes(new { style = "height:500px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Aggregates(aggregates =>
        {
            aggregates.Add(p => p.DepartmentName).Count();

        })
        .ServerOperation(false)
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.DepartmentId))
    .Read(read => read.Action("GetDepartmentList", "Department"))
    .Destroy(read => read.Action("DeleteDepartment", "Department"))
    )
)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/scripts/jquery.validate.min.js"></script>
<script type="text/javascript">

    function onPaging(arg) {
        LastselectedLength = 0;
        var grid = $("#grid").data("kendoGrid");
        grid.clearSelection();
    }

    var selected = 0;
    var LastselectedLength = 0;

    var DepartmentID = 0;
    var ARName = "";
    function onPaging(arg) {
        LastselectedLength = 0;
        var grid = $("#grid").data("kendoGrid");
        grid.clearSelection();
    }

    function onChangeSelection(arg) {
        var grid = $("#grid").data("kendoGrid");

        selected = this.selectedKeyNames();
        if (LastselectedLength == selected[0]) {
            selected = [];
            grid.clearSelection();
        }
        LastselectedLength = selected[0];
        if (selected.length == 0) {
            $("#savebutton").html('<i class="fa fa-save"></i> إضافة');
            $("#ARName").val('');

            DepartmentID = 0;
            locked = "";
            ARName = "";
            return;
        }
        var selectedRows = this.select();
        var selectedDataItems = [];
        for (var i = 0; i < selectedRows.length; i++) {
            var dataItem = this.dataItem(selectedRows[i]);
            selectedDataItems.push(dataItem);
        }

        if (selectedDataItems.length === 1 && selectedDataItems != []) {
            $("#savebutton").html('<i class="fa fa-save"></i> تعديل');
            ARName = selectedDataItems[0].DepartmentName;

            DepartmentID = selectedDataItems[0].DepartmentId;
        
            $("#ARName").val(ARName);

        }
    }
    $(document).ready(function () {

        $("#departmentfrm").validate({
            rules:
            {
                ARName:
                {
                    required: true
                }
            },
            messages: {
                ARName:
                {
                    required: "من فضلك أدخل القسم"
                }
            }
        });

        //for search on any char like string or numbers or boolean or date
        $('.k-input').on('input', function (e) {
            var grid = $('#grid').data('kendoGrid');
            var columns = grid.columns;

            var filter = { logic: 'or', filters: [] };
            columns.forEach(function (x) {
                if (x.field) {
                    var type = grid.dataSource.options.schema.model.fields[x.field].type;
                    if (type == 'string') {
                        filter.filters.push({
                            field: x.field,
                            operator: 'contains',
                            value: e.target.value
                        })
                    }
                }
            });
            grid.dataSource.filter(filter);
        });

        $('#popover-left,#popover-top,#popover-bottom,#popover-right').popover();
        $('#tooltip-left,#tooltip-top,#tooltip-bottom,#tooltip-right').tooltip();
        $('.k-grid-EditModal').attr('data-toggle', 'modal');
        $('.k-grid-EditModal').attr('data-target', '#RoleEditModalPopup');
        $('.k-grid-CreateModal').attr('data-toggle', 'modal');
        $('.k-grid-CreateModal').attr('data-target', '#WorkOrderCreateModalPopup');
        $('.k-grid-DeleteModal').attr('data-toggle', 'modal');
        $('.k-grid-DeleteModal').attr('data-target', '#WorkOrderDeleteModalPopup');
        var element = document.querySelector('[aria-label="Select all rows"]');
        element.disabled = true;
        element.style.visibility = 'hidden';

    });

    function saveDepartment() {
        if (!$("#departmentfrm").valid()) {
            return;
        }
        $.ajax(
            {
                type: "POST",
                url: '@Url.Action("SaveDepartment", "Department")',
                data: {
                    DepartmentId: DepartmentID,
                    DepartmentName: $("#ARName").val(),

                },

                error: function (result) {
                    alert("There is a Problem, Try Again!");
                },
                success: function (result) {
                    if (result == -1) {
                        alert('الإسم متكرر');
                        $("#ARName").val('');
                    } else if (result.Errors == null) {
                    
                        alert("تم الحفظ بنجاح");
                        var grid = $("#grid").data("kendoGrid");
                        $(".k-grid-search .k-input").val('');
                    
                        grid.dataSource.read();
                        $("#ARName").val('');
                    }
                }
            });
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
            var grid = $("#grid").data("kendoGrid");
            grid.cancelChanges();
            grid.dataSource.read();
        }
    }

</script>



@section styles{
    <style>
        .k-grid tr .checkbox-align {
            text-align: center;
            vertical-align: middle;
        }
    </style>
}